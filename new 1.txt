
import java.util.*;

class MusicStore {
    private final int capacity;
    private final Map<String, LinkedList<String>> userToSongsMap;
    private final Map<String, Long> songToTimestampMap;

    public MusicStore(int capacity) {
        this.capacity = capacity;
        this.userToSongsMap = new HashMap<>();
        this.songToTimestampMap = new HashMap<>();
    }

    public void addSong(String user, String song) {
        if (userToSongsMap.containsKey(user) && userToSongsMap.get(user).size() >= capacity) {
            String leastRecentlyPlayedSong = userToSongsMap.get(user).removeLast();
            songToTimestampMap.remove(leastRecentlyPlayedSong);
        }

        if (!userToSongsMap.containsKey(user)) {
            userToSongsMap.put(user, new LinkedList<>());
        }
        userToSongsMap.get(user).addFirst(song);
        songToTimestampMap.put(song, System.currentTimeMillis());
    }

    public List<String> getRecentlyPlayedSongs(String user) {
        if (!userToSongsMap.containsKey(user)) {
            return Collections.emptyList();
        }

        List<String> songs = new ArrayList<>(userToSongsMap.get(user));
        songs.sort(Comparator.comparingLong(songToTimestampMap::get).reversed());
        return songs.subList(0, Math.min(songs.size(), capacity));
    }
}
